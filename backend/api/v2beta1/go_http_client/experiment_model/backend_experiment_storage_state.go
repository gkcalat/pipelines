// Code generated by go-swagger; DO NOT EDIT.

package experiment_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// BackendExperimentStorageState Describes whether an entity is available or archived.
//
//  - STORAGESTATE_UNSPECIFIED: Default state. This state in not used
//  - AVAILABLE: Entity is available.
//  - ARCHIVED: Entity is archived.
// swagger:model backendExperimentStorageState
type BackendExperimentStorageState string

const (

	// BackendExperimentStorageStateSTORAGESTATEUNSPECIFIED captures enum value "STORAGESTATE_UNSPECIFIED"
	BackendExperimentStorageStateSTORAGESTATEUNSPECIFIED BackendExperimentStorageState = "STORAGESTATE_UNSPECIFIED"

	// BackendExperimentStorageStateAVAILABLE captures enum value "AVAILABLE"
	BackendExperimentStorageStateAVAILABLE BackendExperimentStorageState = "AVAILABLE"

	// BackendExperimentStorageStateARCHIVED captures enum value "ARCHIVED"
	BackendExperimentStorageStateARCHIVED BackendExperimentStorageState = "ARCHIVED"
)

// for schema
var backendExperimentStorageStateEnum []interface{}

func init() {
	var res []BackendExperimentStorageState
	if err := json.Unmarshal([]byte(`["STORAGESTATE_UNSPECIFIED","AVAILABLE","ARCHIVED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		backendExperimentStorageStateEnum = append(backendExperimentStorageStateEnum, v)
	}
}

func (m BackendExperimentStorageState) validateBackendExperimentStorageStateEnum(path, location string, value BackendExperimentStorageState) error {
	if err := validate.Enum(path, location, value, backendExperimentStorageStateEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this backend experiment storage state
func (m BackendExperimentStorageState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateBackendExperimentStorageStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
