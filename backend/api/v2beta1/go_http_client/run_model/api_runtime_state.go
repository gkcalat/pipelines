// Code generated by go-swagger; DO NOT EDIT.

package run_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// APIRuntimeState Describes the state of a runtime entity.
//
//  - RUNTIMESTATE_UNSPECIFIED: Default value. This value is not used.
//  - PENDING: Service is preparing to run an entity.
//  - RUNNING: Entity is in progress.
//  - SUCCEEDED: Entity completed successfully.
//  - SKIPPED: Entity has been skipped.
//  - FAILED: Entity failed.
//  - CANCELING: Entity is being canceled. From this state, an entity may only go
// to either SUCCEEDED, FAILED or CANCELED.
//  - CANCELED: Entity has been canceled.
//  - PAUSED: Entity has been stopped, and can be resumed.
// swagger:model apiRuntimeState
type APIRuntimeState string

const (

	// APIRuntimeStateRUNTIMESTATEUNSPECIFIED captures enum value "RUNTIMESTATE_UNSPECIFIED"
	APIRuntimeStateRUNTIMESTATEUNSPECIFIED APIRuntimeState = "RUNTIMESTATE_UNSPECIFIED"

	// APIRuntimeStatePENDING captures enum value "PENDING"
	APIRuntimeStatePENDING APIRuntimeState = "PENDING"

	// APIRuntimeStateRUNNING captures enum value "RUNNING"
	APIRuntimeStateRUNNING APIRuntimeState = "RUNNING"

	// APIRuntimeStateSUCCEEDED captures enum value "SUCCEEDED"
	APIRuntimeStateSUCCEEDED APIRuntimeState = "SUCCEEDED"

	// APIRuntimeStateSKIPPED captures enum value "SKIPPED"
	APIRuntimeStateSKIPPED APIRuntimeState = "SKIPPED"

	// APIRuntimeStateFAILED captures enum value "FAILED"
	APIRuntimeStateFAILED APIRuntimeState = "FAILED"

	// APIRuntimeStateCANCELING captures enum value "CANCELING"
	APIRuntimeStateCANCELING APIRuntimeState = "CANCELING"

	// APIRuntimeStateCANCELED captures enum value "CANCELED"
	APIRuntimeStateCANCELED APIRuntimeState = "CANCELED"

	// APIRuntimeStatePAUSED captures enum value "PAUSED"
	APIRuntimeStatePAUSED APIRuntimeState = "PAUSED"
)

// for schema
var apiRuntimeStateEnum []interface{}

func init() {
	var res []APIRuntimeState
	if err := json.Unmarshal([]byte(`["RUNTIMESTATE_UNSPECIFIED","PENDING","RUNNING","SUCCEEDED","SKIPPED","FAILED","CANCELING","CANCELED","PAUSED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		apiRuntimeStateEnum = append(apiRuntimeStateEnum, v)
	}
}

func (m APIRuntimeState) validateAPIRuntimeStateEnum(path, location string, value APIRuntimeState) error {
	if err := validate.Enum(path, location, value, apiRuntimeStateEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this api runtime state
func (m APIRuntimeState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAPIRuntimeStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
