// Code generated by go-swagger; DO NOT EDIT.

package run_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// RunStorageState Describes whether an entity is available or archived.
//
//  - STORAGESTATE_UNSPECIFIED: Default state. This state in not used
//  - AVAILABLE: Entity is available.
//  - ARCHIVED: Entity is archived.
// swagger:model RunStorageState
type RunStorageState string

const (

	// RunStorageStateSTORAGESTATEUNSPECIFIED captures enum value "STORAGESTATE_UNSPECIFIED"
	RunStorageStateSTORAGESTATEUNSPECIFIED RunStorageState = "STORAGESTATE_UNSPECIFIED"

	// RunStorageStateAVAILABLE captures enum value "AVAILABLE"
	RunStorageStateAVAILABLE RunStorageState = "AVAILABLE"

	// RunStorageStateARCHIVED captures enum value "ARCHIVED"
	RunStorageStateARCHIVED RunStorageState = "ARCHIVED"
)

// for schema
var runStorageStateEnum []interface{}

func init() {
	var res []RunStorageState
	if err := json.Unmarshal([]byte(`["STORAGESTATE_UNSPECIFIED","AVAILABLE","ARCHIVED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		runStorageStateEnum = append(runStorageStateEnum, v)
	}
}

func (m RunStorageState) validateRunStorageStateEnum(path, location string, value RunStorageState) error {
	if err := validate.Enum(path, location, value, runStorageStateEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this run storage state
func (m RunStorageState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateRunStorageStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
