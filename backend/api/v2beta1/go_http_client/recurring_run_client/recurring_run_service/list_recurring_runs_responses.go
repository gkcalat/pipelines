// Code generated by go-swagger; DO NOT EDIT.

package recurring_run_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	recurring_run_model "github.com/kubeflow/pipelines/backend/api/v2beta1/go_http_client/recurring_run_model"
)

// ListRecurringRunsReader is a Reader for the ListRecurringRuns structure.
type ListRecurringRunsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListRecurringRunsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListRecurringRunsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewListRecurringRunsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListRecurringRunsOK creates a ListRecurringRunsOK with default headers values
func NewListRecurringRunsOK() *ListRecurringRunsOK {
	return &ListRecurringRunsOK{}
}

/*ListRecurringRunsOK handles this case with default header values.

A successful response.
*/
type ListRecurringRunsOK struct {
	Payload *recurring_run_model.APIListRecurringRunsResponse
}

func (o *ListRecurringRunsOK) Error() string {
	return fmt.Sprintf("[GET /apis/v2beta1/recurringruns][%d] listRecurringRunsOK  %+v", 200, o.Payload)
}

func (o *ListRecurringRunsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(recurring_run_model.APIListRecurringRunsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRecurringRunsDefault creates a ListRecurringRunsDefault with default headers values
func NewListRecurringRunsDefault(code int) *ListRecurringRunsDefault {
	return &ListRecurringRunsDefault{
		_statusCode: code,
	}
}

/*ListRecurringRunsDefault handles this case with default header values.

ListRecurringRunsDefault list recurring runs default
*/
type ListRecurringRunsDefault struct {
	_statusCode int

	Payload *recurring_run_model.APIStatus
}

// Code gets the status code for the list recurring runs default response
func (o *ListRecurringRunsDefault) Code() int {
	return o._statusCode
}

func (o *ListRecurringRunsDefault) Error() string {
	return fmt.Sprintf("[GET /apis/v2beta1/recurringruns][%d] ListRecurringRuns default  %+v", o._statusCode, o.Payload)
}

func (o *ListRecurringRunsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(recurring_run_model.APIStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
