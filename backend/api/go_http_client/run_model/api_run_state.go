// Code generated by go-swagger; DO NOT EDIT.

package run_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// APIRunState Describes the state of a Run.
//
//  - PIPELINE_STATE_UNSPECIFIED: The Run state is unspecified.
//  - PIPELINE_STATE_QUEUED: The Run has been created or resumed, and processing has not yet
// begun.
//  - PIPELINE_STATE_PENDING: The service is preparing to run the pipeline.
//  - PIPELINE_STATE_RUNNING: The Run is in progress.
//  - PIPELINE_STATE_SUCCEEDED: The Run completed successfully.
//  - PIPELINE_STATE_FAILED: The Run failed.
//  - PIPELINE_STATE_CANCELLING: The Run is being cancelled. From this state, the Run may only go
// to either PIPELINE_STATE_SUCCEEDED, PIPELINE_STATE_FAILED or
// PIPELINE_STATE_CANCELLED.
//  - PIPELINE_STATE_CANCELLED: The Run has been cancelled.
//  - PIPELINE_STATE_PAUSED: The Run has been stopped, and can be resumed.
// swagger:model apiRunState
type APIRunState string

const (

	// APIRunStatePIPELINESTATEUNSPECIFIED captures enum value "PIPELINE_STATE_UNSPECIFIED"
	APIRunStatePIPELINESTATEUNSPECIFIED APIRunState = "PIPELINE_STATE_UNSPECIFIED"

	// APIRunStatePIPELINESTATEQUEUED captures enum value "PIPELINE_STATE_QUEUED"
	APIRunStatePIPELINESTATEQUEUED APIRunState = "PIPELINE_STATE_QUEUED"

	// APIRunStatePIPELINESTATEPENDING captures enum value "PIPELINE_STATE_PENDING"
	APIRunStatePIPELINESTATEPENDING APIRunState = "PIPELINE_STATE_PENDING"

	// APIRunStatePIPELINESTATERUNNING captures enum value "PIPELINE_STATE_RUNNING"
	APIRunStatePIPELINESTATERUNNING APIRunState = "PIPELINE_STATE_RUNNING"

	// APIRunStatePIPELINESTATESUCCEEDED captures enum value "PIPELINE_STATE_SUCCEEDED"
	APIRunStatePIPELINESTATESUCCEEDED APIRunState = "PIPELINE_STATE_SUCCEEDED"

	// APIRunStatePIPELINESTATEFAILED captures enum value "PIPELINE_STATE_FAILED"
	APIRunStatePIPELINESTATEFAILED APIRunState = "PIPELINE_STATE_FAILED"

	// APIRunStatePIPELINESTATECANCELLING captures enum value "PIPELINE_STATE_CANCELLING"
	APIRunStatePIPELINESTATECANCELLING APIRunState = "PIPELINE_STATE_CANCELLING"

	// APIRunStatePIPELINESTATECANCELLED captures enum value "PIPELINE_STATE_CANCELLED"
	APIRunStatePIPELINESTATECANCELLED APIRunState = "PIPELINE_STATE_CANCELLED"

	// APIRunStatePIPELINESTATEPAUSED captures enum value "PIPELINE_STATE_PAUSED"
	APIRunStatePIPELINESTATEPAUSED APIRunState = "PIPELINE_STATE_PAUSED"
)

// for schema
var apiRunStateEnum []interface{}

func init() {
	var res []APIRunState
	if err := json.Unmarshal([]byte(`["PIPELINE_STATE_UNSPECIFIED","PIPELINE_STATE_QUEUED","PIPELINE_STATE_PENDING","PIPELINE_STATE_RUNNING","PIPELINE_STATE_SUCCEEDED","PIPELINE_STATE_FAILED","PIPELINE_STATE_CANCELLING","PIPELINE_STATE_CANCELLED","PIPELINE_STATE_PAUSED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		apiRunStateEnum = append(apiRunStateEnum, v)
	}
}

func (m APIRunState) validateAPIRunStateEnum(path, location string, value APIRunState) error {
	if err := validate.Enum(path, location, value, apiRunStateEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this api run state
func (m APIRunState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAPIRunStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
