// Code generated by go-swagger; DO NOT EDIT.

package run_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// MlMetadataExecution ml metadata execution
// swagger:model ml_metadataExecution
type MlMetadataExecution struct {

	// Output only. Create time of the execution in millisecond since epoch.
	// Read Only: true
	CreateTimeSinceEpoch string `json:"create_time_since_epoch,omitempty"`

	// User provided custom properties which are not defined by its type.
	CustomProperties map[string]MlMetadataValue `json:"custom_properties,omitempty"`

	// Output only. The globally unique server generated id of the execution.
	// Read Only: true
	ID string `json:"id,omitempty"`

	// The last known state of an execution in the system.
	LastKnownState MlMetadataExecutionState `json:"last_known_state,omitempty"`

	// Output only. Last update time of the execution in millisecond since epoch.
	// Read Only: true
	LastUpdateTimeSinceEpoch string `json:"last_update_time_since_epoch,omitempty"`

	// The client provided name of the execution. This field is optional. If set,
	// it must be unique among all the executions of the same execution type
	// within a database instance and cannot be changed once set.
	Name string `json:"name,omitempty"`

	// Properties of the Execution.
	// Properties must be specified in the ExecutionType.
	Properties map[string]MlMetadataValue `json:"properties,omitempty"`

	// Output only. The name of an ExecutionType.
	// Read Only: true
	Type string `json:"type,omitempty"`

	// The id of an ExecutionType. This needs to be specified when an execution is
	// created, and it cannot be changed.
	// The id of an ExecutionType.
	TypeID string `json:"type_id,omitempty"`
}

// Validate validates this ml metadata execution
func (m *MlMetadataExecution) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCustomProperties(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastKnownState(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProperties(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *MlMetadataExecution) validateCustomProperties(formats strfmt.Registry) error {

	if swag.IsZero(m.CustomProperties) { // not required
		return nil
	}

	for k := range m.CustomProperties {

		if err := validate.Required("custom_properties"+"."+k, "body", m.CustomProperties[k]); err != nil {
			return err
		}
		if val, ok := m.CustomProperties[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

func (m *MlMetadataExecution) validateLastKnownState(formats strfmt.Registry) error {

	if swag.IsZero(m.LastKnownState) { // not required
		return nil
	}

	if err := m.LastKnownState.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("last_known_state")
		}
		return err
	}

	return nil
}

func (m *MlMetadataExecution) validateProperties(formats strfmt.Registry) error {

	if swag.IsZero(m.Properties) { // not required
		return nil
	}

	for k := range m.Properties {

		if err := validate.Required("properties"+"."+k, "body", m.Properties[k]); err != nil {
			return err
		}
		if val, ok := m.Properties[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *MlMetadataExecution) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MlMetadataExecution) UnmarshalBinary(b []byte) error {
	var res MlMetadataExecution
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
