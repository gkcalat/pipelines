// Code generated by go-swagger; DO NOT EDIT.

package run_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// MlMetadataArtifactState  - PENDING: A state indicating that the artifact may exist.
//  - LIVE: A state indicating that the artifact should exist, unless something
// external to the system deletes it.
//  - MARKED_FOR_DELETION: A state indicating that the artifact should be deleted.
//  - DELETED: A state indicating that the artifact has been deleted.
// swagger:model ml_metadataArtifactState
type MlMetadataArtifactState string

const (

	// MlMetadataArtifactStateUNKNOWN captures enum value "UNKNOWN"
	MlMetadataArtifactStateUNKNOWN MlMetadataArtifactState = "UNKNOWN"

	// MlMetadataArtifactStatePENDING captures enum value "PENDING"
	MlMetadataArtifactStatePENDING MlMetadataArtifactState = "PENDING"

	// MlMetadataArtifactStateLIVE captures enum value "LIVE"
	MlMetadataArtifactStateLIVE MlMetadataArtifactState = "LIVE"

	// MlMetadataArtifactStateMARKEDFORDELETION captures enum value "MARKED_FOR_DELETION"
	MlMetadataArtifactStateMARKEDFORDELETION MlMetadataArtifactState = "MARKED_FOR_DELETION"

	// MlMetadataArtifactStateDELETED captures enum value "DELETED"
	MlMetadataArtifactStateDELETED MlMetadataArtifactState = "DELETED"
)

// for schema
var mlMetadataArtifactStateEnum []interface{}

func init() {
	var res []MlMetadataArtifactState
	if err := json.Unmarshal([]byte(`["UNKNOWN","PENDING","LIVE","MARKED_FOR_DELETION","DELETED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		mlMetadataArtifactStateEnum = append(mlMetadataArtifactStateEnum, v)
	}
}

func (m MlMetadataArtifactState) validateMlMetadataArtifactStateEnum(path, location string, value MlMetadataArtifactState) error {
	if err := validate.Enum(path, location, value, mlMetadataArtifactStateEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this ml metadata artifact state
func (m MlMetadataArtifactState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateMlMetadataArtifactStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
