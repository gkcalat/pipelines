// Code generated by go-swagger; DO NOT EDIT.

package run_model

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// PipelineTaskExecutorDetailContainerDetail The detail of a container execution. It contains the job names of the
// lifecycle of a container execution.
// swagger:model PipelineTaskExecutorDetailContainerDetail
type PipelineTaskExecutorDetailContainerDetail struct {

	// The names of the previously failed [CustomJob][] for the main container
	// executions. The list includes the all attempts in chronological order.
	FailedMainJobs []string `json:"failed_main_jobs"`

	// The names of the previously failed [CustomJob][] for the
	// pre-caching-check container executions. This job will be available if the
	// [Run.pipeline_spec][] specifies the `pre_caching_check` hook in
	// the lifecycle events.
	// The list includes the all attempts in chronological order.
	FailedPreCachingCheckJobs []string `json:"failed_pre_caching_check_jobs"`

	// The name of the [CustomJob][] for the main container execution.
	MainJob string `json:"main_job,omitempty"`

	// The name of the [CustomJob][] for the pre-caching-check container
	// execution. This job will be available if the
	// [Run.pipeline_spec][] specifies the `pre_caching_check` hook in
	// the lifecycle events.
	PreCachingCheckJob string `json:"pre_caching_check_job,omitempty"`
}

// Validate validates this pipeline task executor detail container detail
func (m *PipelineTaskExecutorDetailContainerDetail) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *PipelineTaskExecutorDetailContainerDetail) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PipelineTaskExecutorDetailContainerDetail) UnmarshalBinary(b []byte) error {
	var res PipelineTaskExecutorDetailContainerDetail
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
